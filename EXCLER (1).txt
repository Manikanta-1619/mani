how to display  dot on webpage 
ans : To display a dot on a webpage, you have several simple options depending on what kind of dot you want.

how to view page source?
ans:Right-click anywhere on the webpage.

Select "View Page Source" or "View Source" from the context menu.

Alternatively:

On Windows/Linux: Press Ctrl + U

On Mac: Press Cmd + Option + U

This will open a new tab or window showing the HTML source code of the webpage.

this javascript secured ?

01/07/2025

CHAINING:
 
calling different methods  in single  line  by using [""]

Chaining in JavaScript refers to the practice of invoking multiple methods on the same object in a single, continuous line of code. This technique enhances code readability and conciseness by eliminating the need for temporary variables to store intermediate results.
How Method Chaining Works:
Method chaining is enabled when each method in the chain returns the object instance on which it was called. This is commonly achieved by returning this from within the method. When a method returns this, it essentially returns a reference to the current object, allowing another method of that same object to be called immediately on the returned reference.
Example of Method Chaining:

   EVENTS:
| Event         | Trigger Element | Description                     |
| ------------- | --------------- | ------------------------------- |
| `onclick`     | Button          | Triggers on mouse click         |
| `onkeydown`   | Text input      | Triggers when a key is pressed  |
| `onmouseover` | Div             | Triggers when mouse hovers over |
| `onchange`    | Select dropdown | Triggers when selection changes |
| `onsubmit`    | Form            | Triggers when form is submitted |

  ERROR HANDLING:
  throw Statement:
   Error handling in JavaScript is the process of managing unexpected issues or errors that occur during the execution of a program, preventing crashes and improving the user experience.
Key Mechanisms for Error Handling:
try...catch...finally Block:
try block: Encloses the code that might potentially throw an error.
catch block: Catches the error if one is thrown within the try block and allows you to handle it gracefully. The catch block receives an Error object containing details about the error (e.g., name, message, stack).
finally block: Executes after both the try and catch blocks, regardless of whether an error occurred or was caught. It is commonly used for cleanup operations like closing files or releasing resources.
JavaScript

throw Statement:
Allows you to explicitly create and throw custom errors or re-throw caught errors. This can be a String, Number, Boolean, or an Error object. It's best practice to throw Error objects for better information. 
JavaScript


Asynchronous Error Handling:
Promises: Use .catch() to handle rejections in Promises, or try...catch within async/await functions.
async/await: Allows for synchronous-looking error handling with try...catch blocks within async functions.
JavaScript


JSON :

STANDS FOR javascript object notation 
2. used to transfer the data "over the n/w
3. we can also called json as a "javascript objects"
4.json is light weight 
JSON (JavaScript Object Notation) is a lightweight data-interchange format derived from JavaScript object syntax. It is commonly used for storing and exchanging data, particularly between a server and a client in web applications.
Key characteristics of JSON in JavaScript:
Text-based format:
JSON data is represented as a string, making it easy to transmit and receive across networks.
Human-readable:
The syntax is relatively easy for humans to understand.
Language-independent:
While derived from JavaScript, JSON is a language-independent format, meaning it can be parsed and generated by various programming languages.
Data representation:
JSON represents data as key/value pairs and ordered lists of values (arrays).
Objects: Represented by curly braces {} and contain key/value pairs, where keys are strings enclosed in double quotes and values can be strings, numbers, booleans, null, objects, or arrays.
Arrays: Represented by square brackets [] and contain an ordered list of values.

json  is easy to Reading /passing.



                         SYNTAX:

                        OBJECTS---> {}
                        ARRAYS---> []
                        DATA---> "Keys and values pairs"



























